// <auto-generated />
using System;
using Entity.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250728035044_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.PasswordResetCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetCodes");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Calle 1 # 1-1",
                            CityId = 33,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Persona1",
                            Identification = "000000000",
                            IsDeleted = false,
                            LastName = "Persona1",
                            PhoneNumber = "3000000000"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Carrera 10 # 20-15",
                            CityId = 34,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Persona2",
                            Identification = "000000001",
                            IsDeleted = false,
                            LastName = "Persona2",
                            PhoneNumber = "3000000001"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Avenida 3 # 5-30",
                            CityId = 35,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Persona3",
                            Identification = "000000002",
                            IsDeleted = false,
                            LastName = "Persona3",
                            PhoneNumber = "3000000003"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            IsDeleted = false,
                            Password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@example.com",
                            IsDeleted = false,
                            Password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "producer@example.com",
                            IsDeleted = false,
                            Password = "f4156105c167be3a85ad995b661a701a54aaec63c12af53a146d57183aad4fa2",
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Acevedo"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Agrado"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Aipe"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Algeciras"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Altamira"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Baraya"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Campoalegre"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Elías"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Garzón"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Gigante"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Guadalupe"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Hobo"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Iquira"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Isnos"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "La Argentina"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "La Plata"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Nátaga"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Neiva"
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Oporapa"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Paicol"
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Palermo"
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Palestina"
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Pital"
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Pitalito"
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Rivera"
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Saladoblanco"
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "San Agustín"
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Santa María"
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Suaza"
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Tarqui"
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Tello"
                        },
                        new
                        {
                            Id = 33,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Teruel"
                        },
                        new
                        {
                            Id = 34,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Tesalia"
                        },
                        new
                        {
                            Id = 35,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Timaná"
                        },
                        new
                        {
                            Id = 36,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Villavieja"
                        },
                        new
                        {
                            Id = 37,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Yaguará"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Amazonas"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Antioquia"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Arauca"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Atlántico"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bolívar"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Boyacá"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Caldas"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Caquetá"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Casanare"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cauca"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cesar"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Chocó"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Córdoba"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cundinamarca"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guainía"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guaviare"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Huila"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "La Guajira"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Magdalena"
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Meta"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Nariño"
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Norte de Santander"
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Putumayo"
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Quindío"
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Risaralda"
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "San Andrés y Providencia"
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Santander"
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sucre"
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tolima"
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Valle del Cauca"
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Vaupés"
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Vichada"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Hectares")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Farms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca el Jardin",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca el Mirador",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca los Alpes",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca los Lulos",
                            ProducerId = 1
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.FarmImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("FarmImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 1,
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1753647812/Imagen_de_WhatsApp_2025-07-27_a_las_15.22.45_14c80001_uid9qb.jpg",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 2,
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1753647812/Imagen_de_WhatsApp_2025-07-27_a_las_15.22.45_14c80001_uid9qb.jpg",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 3,
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1753647812/Imagen_de_WhatsApp_2025-07-27_a_las_15.22.45_14c80001_uid9qb.jpg",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 4,
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1753647812/Imagen_de_WhatsApp_2025-07-27_a_las_15.22.45_14c80001_uid9qb.jpg",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Code = "PENDIENTE",
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hola vendo papa",
                            IsDeleted = true,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Frutas"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cítricos",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tropicales",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Exóticas",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Hortalizas"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tubérculos",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Granos"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Café",
                            ParentCategoryId = 7
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cacao",
                            ParentCategoryId = 7
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Production")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FarmId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.FormModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("ModuleId");

                    b.ToTable("FormModules");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rol con permisos administrativos",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rol con permisos de usuario",
                            IsDeleted = false,
                            Name = "Consumer"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rol con permisos de Productor",
                            IsDeleted = false,
                            Name = "Producer"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolFormPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RolId");

                    b.ToTable("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.ToTable("RolUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Person", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.User", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Auth.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Entity.Domain.Models.Implements.Auth.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.City", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.Department", "Department")
                        .WithMany("Cities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farm", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.City", "City")
                        .WithMany("Farms")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Producers.Producer", "Producer")
                        .WithMany("Farms")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.FarmImage", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Farm", "Farm")
                        .WithMany("FarmImages")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Producer", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithOne("Producer")
                        .HasForeignKey("Entity.Domain.Models.Implements.Producers.Producer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.Category", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Products.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.Product", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Products.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Producers.Farm", "Farm")
                        .WithMany("Products")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.ProductImage", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Products.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.FormModule", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Security.Form", "Form")
                        .WithMany("FormModules")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Security.Module", "Module")
                        .WithMany("FormModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Security.Form", "Form")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Security.Permission", "Permission")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Security.Rol", "Rol")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolUser", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Security.Rol", "Rol")
                        .WithMany("RolUsers")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithMany("RolUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Person", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.User", b =>
                {
                    b.Navigation("Producer");

                    b.Navigation("RolUsers");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.City", b =>
                {
                    b.Navigation("Farms");

                    b.Navigation("People");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.Department", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farm", b =>
                {
                    b.Navigation("FarmImages");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Producer", b =>
                {
                    b.Navigation("Farms");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Products.Product", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Form", b =>
                {
                    b.Navigation("FormModules");

                    b.Navigation("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Module", b =>
                {
                    b.Navigation("FormModules");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Permission", b =>
                {
                    b.Navigation("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Rol", b =>
                {
                    b.Navigation("RolFormPermissions");

                    b.Navigation("RolUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
